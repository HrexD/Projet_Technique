{% extends 'base.html.twig' %}

{% block title %}Hello ItemsController!{% endblock %}

{% block body %}
<title>Items</title>

    <style>

        body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
            padding: 20px;
        }

        h1 {
            text-align: center;
            margin-bottom: 50px;
            margin-top: 20px;
        }

        img{
            max-width:180px;
            max-height:200px;
            border-radius:50%;
        }

        form{
            margin-left: 200px;
        }

        #checkbox-container {
            max-width: 640px;
            margin: 0 auto;
            padding: 80px 80px 80px 80px;
            font-size:20px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        input[type="checkbox"] {
            transform: scale(1.5);
            margin-right: 10px;
            margin-bottom: 20px; 
            }

        .button-container {
            margin-top: 20px;
        }

        #button {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #379EC1;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        #btnAccueil {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #379EC1;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            display: block;
            margin-top: 20px;
            margin-left: 30px;
        }

        #btnAccueil:hover { 
            background-color: #267c97;
        }

        #btnAccueil a{  
            color: #fff;
            text-decoration: none;
        }

        #button:hover {
            background-color: #2e829e;
        }

        .error-message {
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #008000;
            color: #fff;
            padding: 10px;
            border-radius: 5px;
            margin: 20px auto;
            max-width: 500px;
            text-align: center;
            animation: fade-out 1s linear 5s forwards;
        }

@media screen and (max-width: 480px) {
            .container {
                padding: 10px;
            }

            #capture-button {
                max-width: 100%;
            }
        }

    </style>

    
</head>
<body>

<div id="picture-container">
     <img id="picture" src="../images/{{ user.picture }}" alt="Photo de l'agent">
    <button id="btnAccueil"><a href="/">S'identifier</a></button>
</div>

<h1>Veuillez choisir votre équipement</h1>

<div id="checkbox-container">
    {% if booking is not null %}
        <form action="" id="returnTools" method="POST" class="form">
    {% else %}
        <form action="" id="toolsForm" method="POST" class="form">
    {% endif %}
            {% for tool in tools %}
                <div>
                    <input type="checkbox" id="{{ tool.id }}"  {{ (tool.quantity <= 0  and booking is null) ? "disabled" : "" }}
                    {% if booking is not null %}
                        {% for selected in booking.bookingEntries %}
                            {% if selected.tools.id == tool.id %}
                                name="{{ selected.id }}"
                                checked
                            {% endif %}
                        {% endfor %}
                    {% else %}
                        name="{{ tool.slug }}"
                    {% endif %}
                    >
                    <label for="{{ tool.slug }}" style="{{ (tool.quantity <= 0  and booking is null) ? "text-decoration: line-through;" : "" }}">{{ tool.name }}</label>
                </div>
            {% endfor %}
        <div class="button-container">
            <input id="button" type="submit" value={{ booking is not null ? "Modifier" : "Valider" }}>
        </div>
    </form>    
    <div class="error-message" id="alert_crea" style="display:none">
        La liste a été validée avec succès. 
    </div>

    <div class="error-message" id="alert_modif" style="display:none" >
        La liste a été modifiée avec succès. 
    </div>
</div>

<script>
    $(document).ready(function() {
        var allCheckBoxes = document.querySelectorAll('input[type="checkbox"]');
        var checkedTools = [];

        allCheckBoxes.forEach(function(checkbox) {
                // Vérifiez si la valeur de la checkbox est égale à 1
                
                if (checkbox.value === 'on' && checkbox.checked) {
                    // Ajoutez le nom de la checkbox au tableau
                    checkedTools.push(checkbox.id);
                }
        });

        $('#returnTools').submit(function(event) {
            var checkboxes = document.querySelectorAll('input[type="checkbox"]');

            var checkboxNames = [];
            var toolsToDelete = [];

            event.preventDefault(); // Empêche la soumission du formulaire

            checkboxes.forEach(function(checkbox) {
                // Vérifiez si la valeur de la checkbox est égale à 1
                
                if (checkbox.value === 'on' && checkbox.checked && !checkedTools.includes(checkbox.id)) {
                    checkboxNames.push(checkbox.id);

                }
                
                if (checkbox.value === 'on' && !checkbox.checked && checkedTools.includes(checkbox.id)) {
                    toolsToDelete.push(checkbox.name);
                    checkedTools.push(checkbox.id);
                }
            });

            checkboxNames.forEach(function(name) {
                var formData = {
                    booking: "api/bookings/" + {{ booking is not null ? booking.id : "50"}},
                    tools: "api/tools/" + name
                };

                $.ajax({
                    type: 'POST',
                    url: '/api/booking_entries',
                    data: JSON.stringify(formData),
                    contentType: 'application/json',
                    success: function(response) {
                        // Gérer la réponse de l'API ici
                        console.log(response);
                        document.getElementById("alert_modif").style.display = "block";
                    },
                    error: function(xhr, status, error) {
                        // Gérer les erreurs de requête ici
                        console.error(error);
                    }
                });
            });

            toolsToDelete.forEach(function(id) {
                $.ajax({
                    type: 'DELETE',
                    url: '/api/booking_entries/' + id,
                    success: function(response) {
                        // Gérer la réponse de l'API ici
                        console.log(response);
                    },
                    error: function(xhr, status, error) {
                        // Gérer les erreurs de requête ici
                        console.error(error);
                    }
                });
            });

            document.getElementById("alert_modif").style.display = "block";
        });

        $('#toolsForm').submit(function(event) {
            var checkboxes = document.querySelectorAll('input[type="checkbox"]');

            var checkboxNames = [];

            checkboxes.forEach(function(checkbox) {
                // Vérifiez si la valeur de la checkbox est égale à 1
                
                if (checkbox.value === 'on' && checkbox.checked) {
                    // Ajoutez le nom de la checkbox au tableau
                    checkboxNames.push(checkbox.id);
                }
            });


            event.preventDefault(); // Empêche la soumission du formulaire

            var bookingData = {
                // ajouter au bon user de la session
                user: "api/users/{{ user.id }}",
            }; 

            var bookingId;
            $.ajax({
                type: 'POST',
                url: '/api/bookings',
                data: JSON.stringify(bookingData),
                contentType: 'application/json',
                success: function(response) {
                    console.log(response.id);
                    bookingId = response.id;
                    document.getElementById("alert_crea").style.display = "block";
                    checkboxNames.forEach(function(name) {
                        var formData = {
                            booking: "api/bookings/" + bookingId,
                            tools: "api/tools/" + name
                        };

                        $.ajax({
                            type: 'POST',
                            url: '/api/booking_entries',
                            data: JSON.stringify(formData),
                            contentType: 'application/json',
                            success: function(response) {
                                // Gérer la réponse de l'API ici
                                console.log(response);
                            },
                            error: function(xhr, status, error) {
                                // Gérer les erreurs de requête ici
                                console.error(error);
                            }
                        });
                    });
                },
                error: function(xhr, status, error) {
                    // Gérer les erreurs de requête ici
                    console.error(error);
                }
            });
        });
    });
</script>

{% endblock %}
