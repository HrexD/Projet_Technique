<!DOCTYPE html>
<html>
<head>
    <title>Capture d'image</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f1f1f1;
            margin: 0;
            padding: 0;
        }

        .container {
            width: 100%;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
        }

        h1 {
            color: #379EC1;
            margin-bottom: 20px;
            text-align: center;
        }

        .video-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: row;
            width: 100%;
            height: auto;
            max-height: 70vh;
        }

        #video {
            width: auto;
            height: 100%;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-right: 10px;
        }

        #preview-container {
            position: relative;
            width: auto;
            height: 100%;
            max-width: 50%;
        }

        #preview-canvas {
            width: 100%;
            height: auto;
            max-height: 100%;
            border: 1px solid #ccc;
            border-radius: 5px;
            display: none;
        }

        button {
            display: block;
            width: 100%;
            max-width: 300px;
            margin: 0 auto;
            padding: 10px;
            background-color: #379EC1;
            color: #fff;
            text-align: center;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s ease;
            text-transform: uppercase;
        }

        button:hover {
            background-color: #267c97;
        }
        a{
            text-decoration: none;
            color:white;
        }
        #logo {
            width: 250px;
            height: auto;
            position: absolute;
            top: 20px;
            left: 20px;
        }
        #logo1 {
            display: none;
        }
        .containerButton{
            display: flex;

        }
        .error-message {
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #f44336;
            color: #fff;
            padding: 10px;
            border-radius: 5px;
            margin: 20px auto;
            max-width: 500px;
            text-align: center;
            animation: fade-out 1s linear 5s forwards;
        }

        @keyframes fade-out {
            0% { opacity: 1; }
            100% { opacity: 0; display: none}
        }


        @media screen and (max-width: 480px) {
            .container {
                padding: 10px;
            }

            #capture-button {
                max-width: 100%;
            }
        }
        @media screen and (max-height: 700px){
            #logo{
                display: none;
            }
            #logo1{
                width: 100px;
                height: auto;
                position: absolute;
                top: 20px;
                left: 20px;
                display: flex;
            }

        }
    </style>

</head>
<body>
{% if error %}
    <div class="error-message">
        Une erreur s'est produite lors de la correspondance de l'image. Veuillez réessayer.
    </div>
{% endif %}
<img src="{{ asset('images/MaxAirain.png') }}" alt="Logo" id="logo"/>
<img src="{{ asset('images/MaxAirain_1.png') }}" alt="Logo" id="logo1"/>
<div class="container">
    <h1>Capture d'image</h1>
    <div class="video-container">
        <video id="video" autoplay></video>
        <div id="preview-container">
            <canvas id="preview-canvas"></canvas>
        </div>
    </div>
    <div class="containerButton">
        <button id="capture-button">Capture d'image</button>
        <button id="preview-button">Prévisualisation</button>
    </div>
</div>

<script>
    // Obtenir l'élément vidéo, le bouton de capture et le bouton de prévisualisation
    const video = document.getElementById('video');
    const captureButton = document.getElementById('capture-button');
    const previewButton = document.getElementById('preview-button');
    const previewCanvas = document.getElementById('preview-canvas');

    // Vérifier si la caméra est disponible
    navigator.mediaDevices.getUserMedia({ video: true })
        .then(stream => {
            video.srcObject = stream;
        })
        .catch(error => {
            console.error('Erreur lors de l\'accès à la webcam : ', error);
        });

    // Fonction pour capturer et enregistrer l'image
    captureButton.addEventListener('click', () => {
        // Créer un canevas pour dessiner l'image capturée
        const canvas = document.createElement('canvas');
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;

        // Dessiner l'image capturée sur le canevas
        const context = canvas.getContext('2d');
        context.drawImage(video, 0, 0, canvas.width, canvas.height);

        // Obtenir les données de l'image au format base64
        const imageData = canvas.toDataURL('image/jpeg');

        // Créer un formulaire pour envoyer les données de l'image
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '{{ path('sign_in_save_image') }}'; // Remplacez par le chemin de la route de sauvegarde de l'image

        // Créer un champ caché pour les données de l'image
        const imageInput = document.createElement('input');
        imageInput.type = 'hidden';
        imageInput.name = 'image';
        imageInput.value = imageData;

        // Ajouter le champ caché au formulaire
        form.appendChild(imageInput);

        // Ajouter le formulaire à la page et le soumettre
        document.body.appendChild(form);
        form.submit();

        // Afficher la prévisualisation de l'image capturée sur le canevas de prévisualisation
        previewCanvas.width = canvas.width;
        previewCanvas.height = canvas.height;
        previewCanvas.getContext('2d').drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);
    });

    // Fonction pour afficher la prévisualisation de l'image capturée
    previewButton.addEventListener('click', () => {
        // Créer un canevas pour dessiner la prévisualisation
        const canvas = document.createElement('canvas');
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;

        // Dessiner la prévisualisation de l'image capturée sur le canevas
        const context = canvas.getContext('2d');
        context.drawImage(video, 0, 0, canvas.width, canvas.height);

        // Afficher la prévisualisation sur le canvas de prévisualisation
        previewCanvas.width = canvas.width;
        previewCanvas.height = canvas.height;
        previewCanvas.getContext('2d').drawImage(canvas, 0, 0, previewCanvas.width, previewCanvas.height);

        // Afficher le canvas de prévisualisation
        previewCanvas.style.display = 'block';
    });
</script>

</body>
</html>
