{% extends 'base.html.twig' %}

{% block title %}Hello SignInController!{% endblock %}

{% block body %}
<title>Webcam</title>
<style>
body { font-family: Arial, sans-serif; background-color: #f2f2f2; padding: 20px; }
h1 { text-align: center; margin-bottom: 20px; }
#video-container { max-width: 640px; margin: 0 auto; background-color: #fff; border: 1px solid #ccc; border-radius: 5px; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); }
#video-element { width: 100%; height: auto; display: block; }
.button-container { text-align: center; margin-top: 20px; }
.button-container button { padding: 10px 20px; font-size: 16px; background-color: #4caf50; color: #fff; border: none; border-radius: 4px; cursor: pointer; }
.button-container button:not(:last-child) { margin-right: 10px; }
.button-container button:hover { background-color: #45a049; }
</style>
</head>
<body>
<h1>Webcam</h1>
<div id="video-container">
    <video id="video-element" autoplay></video>
</div>
<div class="button-container">
    <button id="screenshot-button">Capturer</button>
    <button id="save-button">Enregistrer</button>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        var videoElement = document.getElementById("video-element");
        var screenshotButton = document.getElementById("screenshot-button");
        var saveButton = document.getElementById("save-button");
        var capturedImage = null;
        var mediaStream;

        screenshotButton.addEventListener("click", function() {
            var canvas = document.createElement("canvas");
            canvas.width = videoElement.videoWidth;
            canvas.height = videoElement.videoHeight;

            var context = canvas.getContext("2d");
            context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);

            capturedImage = canvas.toDataURL("image/png");
        });

        saveButton.addEventListener("click", function() {
            if (capturedImage) {
                var a = document.createElement("a");
                a.href = capturedImage;
                a.download = "capture.png";
                a.click();
            }
        });

        navigator.mediaDevices
            .getUserMedia({ video: true })
            .then(function(stream) {
                videoElement.srcObject = stream;
                mediaStream = stream;
            })
            .catch(function(error) {
                console.error("Erreur lors de l'accès à la webcam :", error);
            });

        // Arrêter la lecture de la vidéo et la libérer lorsque la page se ferme
        window.addEventListener("beforeunload", function() {
            if (mediaStream) {
                mediaStream.getTracks().forEach(function(track) {
                    track.stop();
                });
            }
        });
    });

</script>
{% endblock %}
