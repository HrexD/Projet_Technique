{% extends 'base.html.twig' %}

{% block title %}Hello RegisterController!{% endblock %}

{% block body %}

<html>
<head>
    <title>Inscription</title>
</head>
<style>
    .container {
        display: flex;
    }

    .photo-container {
        flex: 1;
    }

    .photo-container video {
        width: 100%;
        height: auto;
        max-height: 100%;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    .form-container {
        flex: 1;
        padding-left: 20px; /* Ajoutez un espacement entre la photo et le formulaire */
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
    form{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .button-container {
        display: flex;
        justify-content: space-between; /* Aligner les boutons horizontalement */
    }

    .button-container button {
        width: 48%; /* Ajuster la largeur des boutons en fonction de la mise en page souhaitée */
    }

    @media screen and (max-width: 767px) {
        .container {
            flex-direction: column; /* Afficher les éléments en colonne sur mobile */
        }

        .form-container {
            padding-left: 0; /* Supprimer l'espacement entre la photo et le formulaire sur mobile */
            margin-top: 20px; /* Ajouter un espacement entre la photo et le formulaire sur mobile */
        }

        .button-container {
            flex-direction: column; /* Afficher les boutons en colonne sur mobile */
        }

        .button-container button {
            width: 100%; /* Ajuster la largeur des boutons à 100% sur mobile */
            margin-top: 10px; /* Ajouter un espacement entre les boutons sur mobile */
        }
    }


</style>
<body>
    <h1>Inscription</h1>
    <div class="container">
        <div class="photo-container">
            <video id="video" autoplay></video>

        </div>
        <div class="form-container">
            <form method="POST" action="/register" style="

">
                <label for="nom">Nom :</label>
                <input type="text" id="nom" name="nom" required="">

                <label for="prenom">Prénom :</label>
                <input type="text" id="prenom" name="prenom" required="">

                <label for="role">Rôle :</label>
                <input type="text" id="role" name="role" required="">

                <div class="buttonContainer">
                    <button id="capture-button">Prendre une photo</button>
                    <button type="submit">S'inscrire</button>
                </div>
            </form>
        </div>
    </div>

</body>

<script>
    // Obtenir l'élément vidéo et le bouton de capture
    const video = document.getElementById('video');
    const captureButton = document.getElementById('capture-button');

    // Vérifier si la caméra est disponible
    navigator.mediaDevices.getUserMedia({ video: true })
        .then(stream => {
            video.srcObject = stream;
        })
        .catch(error => {
            console.error('Erreur lors de l\'accès à la webcam : ', error);
        });

    // Fonction pour capturer et afficher la photo
    captureButton.addEventListener('click', () => {
        // Créer un canevas pour dessiner l'image capturée
        const canvas = document.createElement('canvas');
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;

        // Dessiner l'image capturée sur le canevas
        const context = canvas.getContext('2d');
        context.drawImage(video, 0, 0, canvas.width, canvas.height);

        // Créer un élément image pour afficher la photo capturée
        const photoContainer = document.querySelector('.photo-container');
        const photo = document.createElement('img');
        photo.src = canvas.toDataURL('image/jpeg');
        photo.classList.add('photo');
        photoContainer.appendChild(photo);
    });


</script>
</html>
{% endblock %}
