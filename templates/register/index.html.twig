<!DOCTYPE html>
<html>
<head>
    <title>Inscription</title>
    <style>
        .container {
            display: flex;
        }

        .photo-container {
            flex: 1;
        }

        .photo-container video {
            width: 100%;
            height: auto;
            max-height: 100%;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .form-container {
            flex: 1;
            padding-left: 20px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        form {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .button-container {
            display: flex;
            justify-content: space-between;
        }

        .button-container button {
            width: 48%;
        }

        @media screen and (max-width: 767px) {
            .container {
                flex-direction: column;
            }

            .form-container {
                padding-left: 0;
                margin-top: 20px;
            }

            .button-container {
                flex-direction: column;
            }

            .button-container button {
                width: 100%;
                margin-top: 10px;
            }
        }
    </style>
</head>
<body>
<h1>Inscription</h1>
<div class="container">
    <div class="photo-container">
        <video id="video" autoplay></video>
        <canvas id="canvas" style="display: none;"></canvas>
    </div>
    <div class="form-container">
        <form method="POST" action="/register">
            <label for="nom">Nom :</label>
            <input type="text" id="nom" name="nom" required>

            <label for="prenom">Prénom :</label>
            <input type="text" id="prenom" name="prenom" required>

            <div class="buttonContainer">
                <button type="button" id="capture-button" disabled>Prendre une photo</button>
                <button type="submit">S'inscrire</button>
            </div>
        </form>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let isPreviewMode = false;
    let videoStream = null;
    let photoCounter = 1;
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const captureButton = document.getElementById('capture-button');
    const form = document.querySelector('form');
    let photo = null;
    var image_name = "";

    captureButton.addEventListener('click', () => {
        if (!isPreviewMode) {
            // Afficher la prévisualisation de la photo
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            canvas.style.display = 'none';
            isPreviewMode = true;

            // Mettre à jour la source de l'image existante avec la nouvelle photo
            if (photo) {
                photo.src = canvas.toDataURL('image/jpeg');
            } else {
                // Créer un élément image pour afficher la photo capturée
                const photoContainer = document.querySelector('.photo-container');
                photo = document.createElement('img');
                const photoName = document.getElementById('nom').value + '_' + photoCounter + '.jpg';
                photo.src = canvas.toDataURL('image/jpeg');
                photo.alt = photoName;
                image_name = photoName;
                photo.classList.add('photo');
                photoContainer.appendChild(photo);
                photoCounter++;
            }
        } else {
            // Revenir à la vidéo en direct
            canvas.style.display = 'none';
            isPreviewMode = false;
        }
    });

    form.addEventListener('submit', (event) => {
        event.preventDefault();

        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        const nom = document.getElementById('nom').value;
        const prenom = document.getElementById('prenom').value;
        const image = image_name;
        const donnee_user = {
            "lastName": nom,
            "firstName": prenom,
            "role": "Vigile",
            "picture": image
        };
        console.log(donnee_user);

        // Enregistrement de la photo dans le dossier public/images
        const base64Image = photo.src.split(';base64,').pop();
        const imageBlob = base64ToBlob(base64Image, 'image/jpeg');
        const imageName = image_name;

        const formDataImage = new FormData();
        formDataImage.append('image', imageBlob, imageName);

        fetch('/images', {
            method: 'POST',
            body: formDataImage,
        })
            .then(response => response.json())
            .then(responseData => {
                console.log('Photo enregistrée avec succès:', responseData);

                // Envoi des données utilisateur au serveur
                fetch('/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(donnee_user),
                })
                    .then(response => response.json())
                    .then(responseData => {
                        console.log('Utilisateur enregistré avec succès:', responseData);
                    })
                    .catch(error => {
                        console.error('Erreur lors de la soumission du formulaire:', error);
                    });
            })
            .catch(error => {
                console.error('Erreur lors de l\'enregistrement de la photo:', error);
            });
    });

    navigator.mediaDevices.getUserMedia({ video: true })
        .then(stream => {
            videoStream = stream;
            video.srcObject = stream;
            video.play();
            captureButton.disabled = false;
        })
        .catch(error => {
            console.error('Erreur lors de l\'accès à la webcam:', error);
        });

    function base64ToBlob(base64, mime) {
        const sliceSize = 1024;
        const byteChars = window.atob(base64);
        const byteArrays = [];

        for (let offset = 0; offset < byteChars.length; offset += sliceSize) {
            const slice = byteChars.slice(offset, offset + sliceSize);

            const byteNumbers = new Array(slice.length);
            for (let i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            const byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
        }

        return new Blob(byteArrays, { type: mime });
    }
</script>

</body>
</html>
